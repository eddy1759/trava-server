{
  "info": {
    "_postman_id": "trava-api-collection-1",
    "name": "Trava API Collection",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Trava API - Auth, Trip, Journal Entry, and Photo endpoints (Part 2)"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/auth/register",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "auth", "register"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"TestPassword123!\",\n  \"fullName\": \"Test User\",\n  \"username\": \"testuser\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.test(\"Response has token\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data.token).to.exist;",
                  "    pm.environment.set(\"TOKEN\", response.data.token);",
                  "    pm.environment.set(\"USER_ID\", response.data.user.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/auth/login",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "auth", "login"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"TestPassword123!\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has token\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data.token).to.exist;",
                  "    pm.environment.set(\"TOKEN\", response.data.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Verify Email",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{BASE_URL}}/api/auth/verify-email?token={{TOKEN}}",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "auth", "verify-email"],
              "query": [
                { "key": "token", "value": "{{TOKEN}}" }
              ]
            }
          }
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/auth/forgot-password",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "auth", "forgot-password"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\"\n}"
            }
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/auth/reset-password?token={{TOKEN}}",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "auth", "reset-password"],
              "query": [
                { "key": "token", "value": "{{TOKEN}}" }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"password\": \"NewPassword123!\"\n}"
            }
          }
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/auth/refresh-token",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "auth", "refresh-token"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/auth/logout",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Trips",
      "item": [
        {
          "name": "Create Trip",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/trips",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "trips"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tripName\": \"Paris Adventure\",\n  \"startDate\": \"2024-06-01\",\n  \"endDate\": \"2024-06-07\",\n  \"description\": \"Exploring the City of Light\",\n  \"destinationQuery\": \"Paris, France\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.test(\"Trip created successfully\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data.tripName).to.eql(\"Paris Adventure\");",
                  "    pm.environment.set(\"TRIP_ID\", response.data.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Trip Details",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/trips/{{TRIP_ID}}",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "trips", "{{TRIP_ID}}"]
            }
          }
        },
        {
          "name": "Update Trip Status",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/trips/{{TRIP_ID}}/status",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "trips", "{{TRIP_ID}}", "status"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"ACTIVE\"\n}"
            }
          }
        }
      ]
    },
    {
      "name": "Journal Entries",
      "item": [
        {
          "name": "Create Journal Entry",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/journal-entries",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "journal-entries"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tripId\": \"{{TRIP_ID}}\",\n  \"title\": \"First Day in Paris\",\n  \"content\": \"Arrived in Paris and visited the Eiffel Tower. The view was absolutely breathtaking!\",\n  \"date\": \"2024-06-01\",\n  \"isPublic\": true\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Journal entry created\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data.title).to.eql(\"First Day in Paris\");",
                  "    pm.environment.set(\"JOURNAL_ENTRY_ID\", response.data.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "List Journal Entries",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/journal-entries?search=Eiffel Tower&tripId={{TRIP_ID}}",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "journal-entries"],
              "query": [
                { "key": "search", "value": "Eiffel Tower" },
                { "key": "tripId", "value": "{{TRIP_ID}}" }
              ]
            }
          }
        },
        {
          "name": "Get Journal Entry",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/journal-entries/{{JOURNAL_ENTRY_ID}}",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "journal-entries", "{{JOURNAL_ENTRY_ID}}"]
            }
          }
        },
        {
          "name": "Update Journal Entry",
          "request": {
            "method": "PATCH",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/journal-entries/{{JOURNAL_ENTRY_ID}}",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "journal-entries", "{{JOURNAL_ENTRY_ID}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Title\",\n  \"content\": \"Updated content\"\n}"
            }
          }
        },
        {
          "name": "Delete Journal Entry",
          "request": {
            "method": "DELETE",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/journal-entries/{{JOURNAL_ENTRY_ID}}",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "journal-entries", "{{JOURNAL_ENTRY_ID}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Photos",
      "item": [
        {
          "name": "Upload Photo",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/photos/upload",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "photos", "upload"]
            },
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "file", "type": "file", "src": "" },
                { "key": "journalEntryId", "type": "text", "value": "{{JOURNAL_ENTRY_ID}}" },
                { "key": "caption", "type": "text", "value": "Eiffel Tower at sunset" },
                { "key": "isPublic", "type": "text", "value": "true" },
                { "key": "provider", "type": "text", "value": "s3" }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Photo uploaded successfully\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data.url).to.exist;",
                  "    pm.environment.set(\"PHOTO_ID\", response.data.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Bulk Upload Photos",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/photos/bulk-upload",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "photos", "bulk-upload"]
            },
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "files", "type": "file", "src": "", "disabled": false },
                { "key": "journalEntryId", "type": "text", "value": "{{JOURNAL_ENTRY_ID}}" },
                { "key": "isPublic", "type": "text", "value": "true" },
                { "key": "provider", "type": "text", "value": "s3" },
                { "key": "captions", "type": "text", "value": "[\"Photo 1\", \"Photo 2\", \"Photo 3\"]" }
              ]
            }
          }
        },
        {
          "name": "Like Photo",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/photos/{{PHOTO_ID}}/like",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "photos", "{{PHOTO_ID}}", "like"]
            }
          }
        },
        {
          "name": "Unlike Photo",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/photos/{{PHOTO_ID}}/unlike",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "photos", "{{PHOTO_ID}}", "unlike"]
            }
          }
        },
        {
          "name": "Comment on Photo",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/photos/{{PHOTO_ID}}/comment",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "photos", "{{PHOTO_ID}}", "comment"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Beautiful photo! Love the sunset colors.\"\n}"
            }
          }
        },
        {
          "name": "Get Photo Comments",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/photos/{{PHOTO_ID}}/comments",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "photos", "{{PHOTO_ID}}", "comments"]
            }
          }
        },
        {
          "name": "Get Photo Likes",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/photos/{{PHOTO_ID}}/likes",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "photos", "{{PHOTO_ID}}", "likes"]
            }
          }
        }
      ]
    },
    {
      "name": "Itinerary",
      "item": [
        {
          "name": "Create Itinerary Item",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/itineraries",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "itineraries"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tripId\": \"{{TRIP_ID}}\",\n  \"day\": 1,\n  \"title\": \"Visit Eiffel Tower\",\n  \"description\": \"Explore the iconic Eiffel Tower\",\n  \"startTime\": \"09:00\",\n  \"endTime\": \"12:00\",\n  \"location\": \"Eiffel Tower, Paris\",\n  \"category\": \"SIGHTSEEING\",\n  \"estimatedCost\": 25.50,\n  \"notes\": \"Book tickets in advance\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.test(\"Itinerary item created\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data.title).to.eql(\"Visit Eiffel Tower\");",
                  "    pm.environment.set(\"ITINERARY_ID\", response.data.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Itinerary Items",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/itineraries?tripId={{TRIP_ID}}&day=1",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "itineraries"],
              "query": [
                { "key": "tripId", "value": "{{TRIP_ID}}" },
                { "key": "day", "value": "1" }
              ]
            }
          }
        },
        {
          "name": "Update Itinerary Item",
          "request": {
            "method": "PATCH",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/itineraries/{{ITINERARY_ID}}",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "itineraries", "{{ITINERARY_ID}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Eiffel Tower Visit\",\n  \"startTime\": \"10:00\",\n  \"estimatedCost\": 30.00\n}"
            }
          }
        },
        {
          "name": "Delete Itinerary Item",
          "request": {
            "method": "DELETE",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/itineraries/{{ITINERARY_ID}}",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "itineraries", "{{ITINERARY_ID}}"]
            }
          }
        },
        {
          "name": "Get Itinerary Statistics",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/itineraries/{{TRIP_ID}}/stats",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "itineraries", "{{TRIP_ID}}", "stats"]
            }
          }
        },
        {
          "name": "Get Smart Itinerary Suggestions",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/itineraries/{{TRIP_ID}}/suggestions",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "itineraries", "{{TRIP_ID}}", "suggestions"]
            }
          }
        }
      ]
    },
    {
      "name": "Expenses",
      "item": [
        {
          "name": "Create Expense",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/expenses",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "expenses"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tripId\": \"{{TRIP_ID}}\",\n  \"title\": \"Eiffel Tower Tickets\",\n  \"amount\": 25.50,\n  \"currency\": \"EUR\",\n  \"category\": \"ENTERTAINMENT\",\n  \"date\": \"2024-06-01\",\n  \"description\": \"Entrance tickets for Eiffel Tower\",\n  \"paymentMethod\": \"CASH\",\n  \"isPlanned\": true\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.test(\"Expense created\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data.title).to.eql(\"Eiffel Tower Tickets\");",
                  "    pm.environment.set(\"EXPENSE_ID\", response.data.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Expenses",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/expenses?tripId={{TRIP_ID}}&category=ENTERTAINMENT",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "expenses"],
              "query": [
                { "key": "tripId", "value": "{{TRIP_ID}}" },
                { "key": "category", "value": "ENTERTAINMENT" }
              ]
            }
          }
        },
        {
          "name": "Update Expense",
          "request": {
            "method": "PATCH",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/expenses/{{EXPENSE_ID}}",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "expenses", "{{EXPENSE_ID}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 30.00,\n  \"description\": \"Updated ticket price\"\n}"
            }
          }
        },
        {
          "name": "Delete Expense",
          "request": {
            "method": "DELETE",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/expenses/{{EXPENSE_ID}}",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "expenses", "{{EXPENSE_ID}}"]
            }
          }
        },
        {
          "name": "Get Expense Statistics",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/expenses/{{TRIP_ID}}/stats",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "expenses", "{{TRIP_ID}}", "stats"]
            }
          }
        },
        {
          "name": "Get Budget Analysis",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/expenses/{{TRIP_ID}}/budget-analysis",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "expenses", "{{TRIP_ID}}", "budget-analysis"]
            }
          }
        },
        {
          "name": "Export Expenses CSV",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/expenses/{{TRIP_ID}}/export",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "expenses", "{{TRIP_ID}}", "export"]
            }
          }
        },
        {
          "name": "Get Smart Budget Suggestions",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/expenses/{{TRIP_ID}}/suggestions",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "expenses", "{{TRIP_ID}}", "suggestions"]
            }
          }
        }
      ]
    },
    {
      "name": "Recommendations",
      "item": [
        {
          "name": "Get Itinerary Recommendations",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/recommendations/itinerary?destination=Paris&duration=7&budget=1000&interests=history,culture",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "recommendations", "itinerary"],
              "query": [
                { "key": "destination", "value": "Paris" },
                { "key": "duration", "value": "7" },
                { "key": "budget", "value": "1000" },
                { "key": "interests", "value": "history,culture" }
              ]
            }
          }
        },
        {
          "name": "Get Budget Recommendations",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/recommendations/budget?destination=Paris&duration=7&travelers=2&style=luxury",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "recommendations", "budget"],
              "query": [
                { "key": "destination", "value": "Paris" },
                { "key": "duration", "value": "7" },
                { "key": "travelers", "value": "2" },
                { "key": "style", "value": "luxury" }
              ]
            }
          }
        },
        {
          "name": "Get Destination Insights",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/recommendations/destination/Paris",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "recommendations", "destination", "Paris"]
            }
          }
        },
        {
          "name": "Get Activity Recommendations",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/recommendations/activities?destination=Paris&interests=history,art&budget=200",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "recommendations", "activities"],
              "query": [
                { "key": "destination", "value": "Paris" },
                { "key": "interests", "value": "history,art" },
                { "key": "budget", "value": "200" }
              ]
            }
          }
        },
        {
          "name": "Get Smart Suggestions",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/recommendations/smart?tripId={{TRIP_ID}}",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "recommendations", "smart"],
              "query": [
                { "key": "tripId", "value": "{{TRIP_ID}}" }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "WebSocket Admin",
      "item": [
        {
          "name": "Get WebSocket Stats",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/websocket/stats",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "websocket", "stats"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has stats data\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data).to.exist;",
                  "    pm.expect(response.data.activeConnections).to.be.a('number');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Room Info",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/websocket/rooms/{{ROOM_ID}}",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "websocket", "rooms", "{{ROOM_ID}}"]
            }
          }
        },
        {
          "name": "Get Client Info",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/websocket/clients/{{CLIENT_ID}}",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "websocket", "clients", "{{CLIENT_ID}}"]
            }
          }
        },
        {
          "name": "Broadcast Message",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/websocket/broadcast",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "websocket", "broadcast"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"Server maintenance in 5 minutes\",\n  \"type\": \"maintenance_notice\",\n  \"excludeUsers\": []\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Broadcast sent successfully\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Broadcast to Room",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{TOKEN}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{BASE_URL}}/api/websocket/broadcast/room",
              "host": ["{{BASE_URL}}"],
              "path": ["api", "websocket", "broadcast", "room"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"roomId\": \"{{ROOM_ID}}\",\n  \"message\": \"Trip itinerary updated\",\n  \"type\": \"trip_update\",\n  \"excludeUsers\": []\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Room broadcast sent successfully\", function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ]
} 